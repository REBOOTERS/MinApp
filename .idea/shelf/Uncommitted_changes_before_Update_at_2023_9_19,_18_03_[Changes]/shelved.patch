Index: compose/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\n    id 'com.android.library'\n    id 'kotlin-android'\n    id 'org.jetbrains.kotlin.android'\n}\ndef ext = rootProject.ext\nandroid {\n    compileSdk ext.compileSdkVersion\n\n    defaultConfig {\n        minSdk ext.minSdkVersion\n        targetSdk ext.targetSdkVersion\n\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n        consumerProguardFiles \"consumer-rules.pro\"\n        vectorDrawables {\n            useSupportLibrary true\n        }\n    }\n\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\n        }\n    }\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_17\n        targetCompatibility JavaVersion.VERSION_17\n    }\n    kotlinOptions {\n        jvmTarget = '17'\n//        useIR = true\n    }\n    buildFeatures {\n        compose true\n    }\n    composeOptions {\n        kotlinCompilerExtensionVersion '1.4.3'\n    }\n    packagingOptions {\n        resources {\n            excludes += '/META-INF/{AL2.0,LGPL2.1}'\n        }\n    }\n    namespace 'com.engineer.compose'\n}\n\ndependencies {\n\n    implementation 'androidx.core:core-ktx:1.10.1'\n    implementation 'androidx.appcompat:appcompat:1.6.1'\n    implementation 'com.google.android.material:material:1.9.0'\n    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'\n\n    api 'androidx.activity:activity-compose:1.7.2'\n    api platform('androidx.compose:compose-bom:2022.10.00')\n    api 'androidx.compose.ui:ui'\n    api 'androidx.compose.ui:ui-graphics'\n    api 'androidx.compose.ui:ui-tooling-preview'\n    api 'androidx.compose.material3:material3'\n    // Image for net\n    implementation(\"io.coil-kt:coil-compose:2.4.0\")\n\n}\n\napply from: file(\"../custom-gradle/test-dep.gradle\") // unit test
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/compose/build.gradle b/compose/build.gradle
--- a/compose/build.gradle	(revision 98cf54f37fe8ea2a48fc3d147c14c6186852a76f)
+++ b/compose/build.gradle	(date 1694769758968)
@@ -48,10 +48,10 @@
 
 dependencies {
 
-    implementation 'androidx.core:core-ktx:1.10.1'
+    implementation 'androidx.core:core-ktx:1.12.0'
     implementation 'androidx.appcompat:appcompat:1.6.1'
     implementation 'com.google.android.material:material:1.9.0'
-    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
+    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
 
     api 'androidx.activity:activity-compose:1.7.2'
     api platform('androidx.compose:compose-bom:2022.10.00')
Index: .idea/shelf/lib_update_and_compat.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/lib_update_and_compat.xml b/.idea/shelf/lib_update_and_compat.xml
new file mode 100644
--- /dev/null	(date 1695113790835)
+++ b/.idea/shelf/lib_update_and_compat.xml	(date 1695113790835)
@@ -0,0 +1,4 @@
+<changelist name="lib_update_and_compat" date="1695112280693" recycled="false">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/lib_update_and_compat/shelved.patch" />
+  <option name="DESCRIPTION" value="lib update and compat" />
+</changelist>
\ No newline at end of file
Index: lib.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>ext {\n    compileSdkVersion = 34\n    minSdkVersion = 23\n    targetSdkVersion = 33\n\n\n    kotlin_version = '1.8.10'\n    gradle_version = '8.0.2'\n\n    kotlin_coroutines = '1.4.1'\n\n    AndResGuard_gradle_plugin = '1.2.21'\n\n    appcompat = '1.6.1'\n    core_ktx = '1.10.1'\n    constraint_layout = '2.1.4'\n    material = '1.9.0'\n\n\n    compose_version = '1.4.2'\n    compose_tools_version = '1.4.2'\n\n    android_hilt_version = '2.44.2'\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib.gradle b/lib.gradle
--- a/lib.gradle	(revision 98cf54f37fe8ea2a48fc3d147c14c6186852a76f)
+++ b/lib.gradle	(date 1694769830331)
@@ -12,7 +12,7 @@
     AndResGuard_gradle_plugin = '1.2.21'
 
     appcompat = '1.6.1'
-    core_ktx = '1.10.1'
+    core_ktx = '1.12.0'
     constraint_layout = '2.1.4'
     material = '1.9.0'
 
Index: custom-gradle/viewmodel-dep.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>dependencies {\n    def lifecycle_version = '2.6.1'\n    def arch_version = \"2.1.0\"\n    def room_version = '2.5.2'\n\n    // ViewModel\n    implementation \"androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version\"\n    // LiveData\n    implementation \"androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version\"\n\n\n    // deprecated\n    // implementation \"androidx.lifecycle:lifecycle-extensions:$lifecycle_version\"\n\n    // Lifecycles only (without ViewModel or LiveData)\n    implementation \"androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version\"\n\n    // Saved state module for ViewModel\n    implementation \"androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version\"\n\n    // Annotation processor\n//    ksp \"androidx.lifecycle:lifecycle-compiler:$lifecycle_version\"\n    // alternately - if using Java8, use the following instead of lifecycle-compiler\n    implementation \"androidx.lifecycle:lifecycle-common-java8:$lifecycle_version\"\n\n    // optional - helpers for implementing LifecycleOwner in a Service\n    implementation \"androidx.lifecycle:lifecycle-service:$lifecycle_version\"\n\n    // optional - ProcessLifecycleOwner provides a lifecycle for the whole application process\n    implementation \"androidx.lifecycle:lifecycle-process:$lifecycle_version\"\n\n//    // optional - ReactiveStreams support for LiveData\n//    implementation \"androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version\"\n//\n//    // optional - Test helpers for LiveData\n//    testImplementation \"androidx.arch.core:core-testing:$arch_version\"\n\n\n    // Room for database\n    implementation \"androidx.room:room-ktx:$room_version\"\n    ksp \"androidx.room:room-compiler:$room_version\"\n\n    def work_version = '2.8.1'\n    implementation \"androidx.work:work-runtime-ktx:$work_version\"\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/custom-gradle/viewmodel-dep.gradle b/custom-gradle/viewmodel-dep.gradle
--- a/custom-gradle/viewmodel-dep.gradle	(revision 98cf54f37fe8ea2a48fc3d147c14c6186852a76f)
+++ b/custom-gradle/viewmodel-dep.gradle	(date 1694769511572)
@@ -1,5 +1,5 @@
 dependencies {
-    def lifecycle_version = '2.6.1'
+    def lifecycle_version = '2.6.2'
     def arch_version = "2.1.0"
     def room_version = '2.5.2'
 
Index: .idea/shelf/lib_update_and_compat/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/lib_update_and_compat/shelved.patch b/.idea/shelf/lib_update_and_compat/shelved.patch
new file mode 100644
--- /dev/null	(date 1695112280678)
+++ b/.idea/shelf/lib_update_and_compat/shelved.patch	(date 1695112280678)
@@ -0,0 +1,321 @@
+Index: settings.gradle
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/settings.gradle b/settings.gradle.kts
+rename from settings.gradle
+rename to settings.gradle.kts
+--- a/settings.gradle	(revision 98cf54f37fe8ea2a48fc3d147c14c6186852a76f)
++++ b/settings.gradle.kts	(date 1695111339753)
+@@ -3,7 +3,7 @@
+         google()
+         mavenCentral()
+         gradlePluginPortal()
+-        maven { url "https://jitpack.io" }
++        maven { setUrl("https://jitpack.io")  }
+     }
+ }
+ dependencyResolutionManagement {
+@@ -12,28 +12,28 @@
+         google()
+         mavenCentral()
+         gradlePluginPortal()
+-        maven { url "https://jitpack.io" }
++        maven { setUrl("https://jitpack.io")  }
+     }
+ }
+ 
+-println "Start All"
++println("Start All")
+ 
+-println "rootProject=" + rootProject
+-println "rootDir    =" + rootDir
++println("rootProject=$rootProject")
++println("rootDir    =$rootDir")
+ 
+-println "settings.dir=" + settingsDir
+-println "settings.dir.parent=" + settingsDir.parent
++println("settings.dir=$settingsDir")
++println("settings.dir.parent=" + settingsDir.parent)
+ 
+-include ':thirdlib'
+-rootProject.name = 'MiniApp'
+-include ':app'
++rootProject.name = "MiniApp"
++include (":thirdlib")
++include (":app")
+ 
+ //setBinding(new Binding([gradle: this]))
+-//evaluate(new File(settingsDir, 'sub_flutter/.android/include_flutter.groovy'))
+-//include ':sub_flutter'
++//evaluate(new File(settingsDir, "sub_flutter/.android/include_flutter.groovy"))
++//include ":sub_flutter"
+ 
+ 
+-include ':compose'
+-include ':other'
+-include ':common'
+-include ':lib_jar'
++include (":compose")
++include (":other")
++include (":common")
++include (":lib_jar")
+Index: build.gradle
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/build.gradle b/build.gradle.kts
+rename from build.gradle
+rename to build.gradle.kts
+--- a/build.gradle	(revision 98cf54f37fe8ea2a48fc3d147c14c6186852a76f)
++++ b/build.gradle.kts	(date 1695111922585)
+@@ -1,17 +1,19 @@
+ // Top-level build file where you can add configuration options common to all sub-projects/modules.
+ 
+ plugins {
+-    id 'com.android.application' version '8.1.1' apply false
+-    id 'com.android.library' version '8.1.1' apply false
+-    id 'org.jetbrains.kotlin.android' version '1.8.10' apply false
+-    id 'com.google.dagger.hilt.android' version '2.48' apply false
+-    id 'com.google.devtools.ksp' version '1.8.10-1.0.9' apply false
++    id("com.android.application") version "8.1.1" apply false
++    id("com.android.library") version "8.1.1" apply false
++    id("org.jetbrains.kotlin.android") version "1.8.10" apply false
++    id("com.google.dagger.hilt.android") version "2.48" apply false
++    id("com.google.devtools.ksp") version "1.8.10-1.0.9" apply false
+ }
+-apply from: file('lib.gradle')
+-apply from: file(rootProject.rootDir.absolutePath + "/custom-gradle/check-style.gradle")
++apply {
++    from(file("lib.gradle"))
++    from(file(rootProject.rootDir.absolutePath + "/custom-gradle/check-style.gradle"))
++}
+ 
+-tasks.register('clean', Delete) {
+-    delete rootProject.buildDir
+-    delete rootProject.rootDir.absolutePath + "/final.apk"
+-    delete rootDir.absolutePath + "/local_repo/"
++tasks.register("clean", Delete::class.java) {
++    delete(rootProject.buildDir)
++    delete(rootProject.rootDir.absolutePath + "/final.apk")
++    delete(rootDir.absolutePath + "/local_repo/")
+ }
+\ No newline at end of file
+Index: app/build.gradle
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/app/build.gradle b/app/build.gradle.kts
+rename from app/build.gradle
+rename to app/build.gradle.kts
+--- a/app/build.gradle	(revision 98cf54f37fe8ea2a48fc3d147c14c6186852a76f)
++++ b/app/build.gradle.kts	(date 1695112253068)
+@@ -1,29 +1,29 @@
+ plugins {
+-    id 'com.android.application'
+-    id 'org.jetbrains.kotlin.android'
+-    id 'com.google.devtools.ksp'
+-    id 'project-report'
+-    id 'dagger.hilt.android.plugin'
++    id("com.android.application")
++    id("org.jetbrains.kotlin.android")
++    id ("com.google.devtools.ksp")
++    id ("project-report")
++    id("dagger.hilt.android.plugin")
+ }
+ import java.text.SimpleDateFormat
+ 
+-def ext = rootProject.ext
+-def buildTime = new SimpleDateFormat("yyMMddHHmm").format(new Date())
++val ext = rootProject.ext
++val buildTime = new SimpleDateFormat("yyMMddHHmm").format(new Date())
+ android {
+-    compileSdk ext.compileSdkVersion
++    compileSdk = ext.compileSdkVersion
+ 
+     defaultConfig {
+-        applicationId "com.engineer.android.mini"
+-        minSdk ext.minSdkVersion
+-        targetSdk ext.targetSdkVersion
+-        versionCode 1
+-        versionName "1.0"
++        applicationId = "com.engineer.android.mini"
++        minSdk = ext.minSdkVersion
++        targetSdk = ext.targetSdkVersion
++        versionCode = 1
++        versionName = "1.0"
+ 
+-        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
+-        resourceConfigurations += ['zh-rCN', 'xxhdpi']
++        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
++        resourceConfigurations += ["zh-rCN", "xxhdpi"]
+ 
+         ndk {
+-            abiFilters 'arm64-v8a', 'armeabi-v7a'
++            abiFilters "arm64-v8a", "armeabi-v7a"
+         }
+ 
+         buildConfigField "Boolean", "enable_log", "false"
+@@ -34,7 +34,7 @@
+                                 extract_native_libs: "true",
+                                 activity_exported  : "true"]
+         vectorDrawables {
+-            useSupportLibrary true
++            useSupportLibrary = true
+         }
+ 
+ 
+@@ -52,33 +52,33 @@
+     buildTypes {
+         release {
+             //混淆
+-            minifyEnabled true
++            minifyEnabled = true
+             //所以尽可能的减少第三方的使用 也是可以降低混淆的难度
+             //Zipalign优化
+-            zipAlignEnabled true
++            zipAlignEnabled = true
+             // 移除无用的resource文件
+-            shrinkResources true
+-            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
+-            signingConfig signingConfigs.release
++            shrinkResources = true
++            proguardFiles(getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"_
++            signingConfig(signingConfigs.release_
+         }
+         debug {
+-            debuggable true
+-            minifyEnabled false
+-            signingConfig signingConfigs.release
++            debuggable =true
++            minifyEnabled= false
++            signingConfig(signingConfigs.release)
+         }
+     }
+     compileOptions {
+-        sourceCompatibility JavaVersion.VERSION_17
+-        targetCompatibility JavaVersion.VERSION_17
++        sourceCompatibility = JavaVersion.VERSION_17
++        targetCompatibility = JavaVersion.VERSION_17
+     }
+     kotlinOptions {
+         jvmTarget = "17"
+     }
+     buildFeatures {
+-        dataBinding true
+-        viewBinding true
+-        aidl true
+-        compose true
++        dataBinding = true
++        viewBinding =true
++        aidl = true
++        compose = true
+     }
+     composeOptions {
+         kotlinCompilerExtensionVersion = "1.4.3"
+@@ -86,10 +86,10 @@
+ 
+     sourceSets {
+         main {
+-//            aidl.srcDirs = ['src/main/aidl']
++//            aidl.srcDirs = ["src/main/aidl"]
+         }
+         local {
+-            manifest.srcFile 'src/local/AndroidManifest.xml'
++            manifest.srcFile "src/local/AndroidManifest.xml"
+         }
+     }
+     flavorDimensions "channel", "type"
+@@ -133,13 +133,13 @@
+ 
+ 
+     }
+-    namespace 'com.engineer.android.mini'
++    namespace "com.engineer.android.mini"
+     lint {
+         checkReleaseBuilds false
+     }
+     packagingOptions {
+         resources {
+-            excludes += '/META-INF/{AL2.0,LGPL2.1}'
++            excludes += "/META-INF/{AL2.0,LGPL2.1}"
+         }
+         jniLibs {
+             useLegacyPackaging false
+@@ -156,52 +156,52 @@
+ }
+ 
+ dependencies {
+-    implementation fileTree(dir: 'libs', include: ['*.jar'])
++    implementation fileTree(dir: "libs", include: ["*.jar"])
+ 
+ 
+     implementation "androidx.appcompat:appcompat:$appcompat"
+     implementation "androidx.core:core-ktx:$core_ktx"
+     implementation "androidx.constraintlayout:constraintlayout:$constraint_layout"
+-    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
++    implementation "androidx.legacy:legacy-support-v4:1.0.0"
+     implementation "com.google.android.material:material:$material"
+     implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
+     implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
+ 
+-    implementation 'com.github.bumptech.glide:glide:4.15.1'
+-    implementation 'androidx.preference:preference-ktx:1.2.1'
++    implementation "com.github.bumptech.glide:glide:4.15.1"
++    implementation "androidx.preference:preference-ktx:1.2.1"
+ 
+-    implementation 'com.facebook.stetho:stetho:1.6.0'
+-    implementation 'com.facebook.stetho:stetho-okhttp3:1.6.0'
++    implementation "com.facebook.stetho:stetho:1.6.0"
++    implementation "com.facebook.stetho:stetho-okhttp3:1.6.0"
+ 
+-    implementation 'com.github.z-chu.RxCache:rxcache:2.3.5'
+-    implementation 'com.github.z-chu.RxCache:rxcache-kotlin:2.3.5'
++    implementation "com.github.z-chu.RxCache:rxcache:2.3.5"
++    implementation "com.github.z-chu.RxCache:rxcache-kotlin:2.3.5"
+ 
+ 
+     if (source_code.toBoolean()) {
+-        globalImplementation project(path: ':thirdlib')
++        globalImplementation project(path: ":thirdlib")
+     } else {
+-        globalImplementation 'com.engineer.third:thirdlib:1.0.0'
++        globalImplementation "com.engineer.third:thirdlib:1.0.0"
+     }
+-    implementation project(path: ':common')
+-    implementation project(path: ':compose')
+-    implementation 'androidx.navigation:navigation-fragment-ktx:2.7.1'
+-    implementation 'androidx.navigation:navigation-ui-ktx:2.7.1'
+-    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
++    implementation project(path: ":common")
++    implementation project(path: ":compose")
++    implementation "androidx.navigation:navigation-fragment-ktx:2.7.2"
++    implementation "androidx.navigation:navigation-ui-ktx:2.7.2"
++    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.6.2"
+ 
+-//    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.10'
++//    debugImplementation "com.squareup.leakcanary:leakcanary-android:2.10"
+ 
+-    implementation 'com.google.android.flexbox:flexbox:3.0.0'
++    implementation "com.google.android.flexbox:flexbox:3.0.0"
+ 
+-    implementation 'com.alibaba:fastjson:1.1.73.android'
+-    implementation 'org.jetbrains.kotlin:kotlin-script-runtime:1.8.22'
++    implementation "com.alibaba:fastjson:1.1.73.android"
++    implementation "org.jetbrains.kotlin:kotlin-script-runtime:1.8.22"
+ 
+ 
+     // https://github.com/koral--/android-gif-drawable/tree/master
+-    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.26'
++    implementation "pl.droidsonroids.gif:android-gif-drawable:1.2.26"
+     implementation "com.squareup.okhttp3:okhttp:4.11.0"
+     implementation "com.squareup.okhttp3:logging-interceptor:4.11.0"
+ 
+-    implementation 'com.github.microshow:RxFFmpeg:4.9.0-lite'
++    implementation "com.github.microshow:RxFFmpeg:4.9.0-lite"
+ }
+ 
+ apply from: file("../custom-gradle/test-dep.gradle") // unit test
